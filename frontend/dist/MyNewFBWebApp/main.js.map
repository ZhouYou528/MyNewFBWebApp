{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/model/user.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/signinform/signinform.component.css","webpack:///./src/app/signinform/signinform.component.html","webpack:///./src/app/signinform/signinform.component.ts","webpack:///./src/app/signupform/signupform.component.css","webpack:///./src/app/signupform/signupform.component.html","webpack:///./src/app/signupform/signupform.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { SigninformComponent } from './signinform/signinform.component';\nimport { SignupformComponent } from './signupform/signupform.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: SigninformComponent\n  },\n  {\n    path: 'signup',\n    component: SignupformComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\nexport const routingComponents = [SigninformComponent]","module.exports = \".fullPage {\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100vh;\\n}\"","module.exports = \"<div class=\\\"fullPage\\\">\\n    <app-header></app-header>\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\n//material\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\n\n//components\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { SignupformComponent } from './signupform/signupform.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    HeaderComponent,\n    FooterComponent,\n    SignupformComponent,\n    DashboardComponent\n  ],\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer {\\n    align-self: flex-end;\\n    text-align: center;\\n    width: 100%;\\n}\"","module.exports = \"<p class=\\\"footer\\\">\\n    Copyright 2017&copy; You Zhou\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".spacer {\\n    flex: 1 1 auto;\\n}\"","module.exports = \"<header>\\n  <mat-toolbar color=\\\"primary\\\">\\n      <span style=\\\"text-align:center;\\\">GatorBook</span>\\n      <span class=\\\"spacer\\\"></span>\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" id=\\\"menubtn\\\">\\n          <i class=\\\"material-icons\\\">account_circle</i>  \\n      </button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item>\\n              <mat-icon>lightbulb_outline</mat-icon>\\n              <span>Notifications</span>\\n          </button>\\n          <button mat-menu-item id=\\\"userprofilebtn\\\">\\n              <mat-icon>person_outline</mat-icon>\\n              <span>Profile</span>\\n          </button>\\n          <button mat-menu-item>\\n              <mat-icon>settings</mat-icon>\\n              <span>Setting</span>\\n          </button>\\n          <button mat-menu-item id=\\\"logout_header\\\" >\\n              <mat-icon>power_settings_new</mat-icon>\\n              <span>Log Out</span>\\n          </button>\\n      </mat-menu>\\n  </mat-toolbar>\\n</header>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class User {\n    constructor(\n        public _id: String = '',\n        public username: string = '',\n        public password: string = '',\n        public email   : string = '',\n        public nickname: string = '',\n        public gender  : string = '',\n        public dob     : Date = new Date(),\n        public friend  : Array<string> = [],\n        public avatar: string = ''\n    ) {}\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: Http) { }\n\n  loginUser(username: String, password: String) {\n    return this.http.post('/users/login', { username: username, password: password })\n    .map(data => data.json()).toPromise();\n  }\n}\n","module.exports = \":host {\\n    flex-grow: 1;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n.login-input-form {\\n    display:block;\\n    width: 100%;\\n}\\n.sign-in-button {\\n    display: inline-block; \\n    margin-top: 10px;\\n}\\n.sign-up-button {\\n    display: inline-block;\\n    padding-left: 10px;\\n    margin-top: 10px;\\n}\\n\"","module.exports = \"<body>\\n  <form (submit)=\\\"loginUser($event)\\\">\\n    <div>\\n      <img width=\\\"500\\\" src=\\\"../assets/GatorBook.jpg\\\">\\n    </div>\\n    <div>\\n      <img width=\\\"500\\\" src=\\\"../assets/gator.png\\\">\\n    </div>\\n    <mat-form-field class=\\\"login-input-form\\\">\\n      <input matInput placeholder=\\\"Enter your username\\\" name=\\\"username\\\" [(ngModel)]=\\\"signinUser.username\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"login-input-form\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Enter your password\\\" name=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"signinUser.password\\\">\\n      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n    </mat-form-field>\\n    <div class=\\\"sign-in-button\\\">\\n      <button color=\\\"primary\\\" id=\\\"signinbtn\\\" type=\\\"submit\\\" mat-raised-button>Sign In</button>   \\n    </div>\\n    <div class=\\\"sign-up-button\\\">\\n      <button color=\\\"primary\\\" id=\\\"signupbtn\\\" routerLink=\\\"/signup\\\" mat-raised-button>Sign Up</button>\\n    </div>\\n  </form>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-signinform',\n  templateUrl: './signinform.component.html',\n  styleUrls: ['./signinform.component.css']\n})\nexport class SigninformComponent implements OnInit {\n\n  hide = true;\n  signinUser = new User();\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(e) {\n    e.preventDefault();\n    this.signinUser.username = e.target.elements[0].value;\n    this.signinUser.password = e.target.elements[1].value;\n\n    // TO-DO: validate input\n\n    this.userService.loginUser(this.signinUser.username, this.signinUser.password)\n    .then(res => {\n      console.log(res);\n      if(res.success) {\n        this.router.navigate(['dashboard']);\n      } else {\n        \n      }\n    }).catch(err => console.log(err));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  signupform works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signupform',\n  templateUrl: './signupform.component.html',\n  styleUrls: ['./signupform.component.css']\n})\nexport class SignupformComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}