{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/model/user.ts","webpack:///./src/app/service/auth.guard.ts","webpack:///./src/app/service/token-interceptor.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/service/validate.service.ts","webpack:///./src/app/signinform/signinform.component.css","webpack:///./src/app/signinform/signinform.component.html","webpack:///./src/app/signinform/signinform.component.ts","webpack:///./src/app/signupform/signupform.component.css","webpack:///./src/app/signupform/signupform.component.html","webpack:///./src/app/signupform/signupform.component.ts","webpack:///./src/app/user-profile/avatarPreview.html","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { SigninformComponent } from './signinform/signinform.component';\nimport { SignupformComponent } from './signupform/signupform.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './service/auth.guard';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { HomeComponent } from './home/home.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'signin',\n    component: SigninformComponent\n  },\n  {\n    path: 'signup',\n    component: SignupformComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profile',\n    component: UserProfileComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\nexport const routingComponents = \n[\n  SigninformComponent, \n  SignupformComponent,\n  DashboardComponent,\n  UserProfileComponent,\n  HomeComponent\n]","module.exports = \".fullPage {\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 99vh;\\n    position: relative;\\n}\\n\"","module.exports = \"<div class=\\\"fullPage\\\">\\n    <app-header></app-header>\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\n\n//material\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule, MatDatepickerModule, MatNativeDateModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n//components\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AvatarPreviewComponent } from'./user-profile/user-profile.component';\n\n//service\nimport { UserService } from './service/user.service';\nimport { AuthGuard } from './service/auth.guard';\nimport { TokenInterceptorService } from './service/token-interceptor.service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    HeaderComponent,\n    FooterComponent,\n    AvatarPreviewComponent,\n  ],\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatRadioModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  entryComponents: [\n    AvatarPreviewComponent\n  ],\n  providers: [\n    UserService, \n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n<mat-spinner></mat-spinner>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    padding: 1rem;\\n    background-color: #efefef;\\n    text-align: center;\\n    margin-bottom: 0;\\n}\"","module.exports = \"<p class=\\\"footer\\\">\\n    Copyright 2018&copy; You Zhou\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".spacer {\\n    flex: 1 1 auto;\\n}\"","module.exports = \"<header>\\n    <mat-toolbar class=\\\"mat-elevation-z5\\\" color=\\\"primary\\\">\\n        <span style=\\\"text-align:center;\\\">GatorBook</span>\\n        <span class=\\\"spacer\\\"></span>   \\n        <button *ngIf=\\\"userService.loggedIn()\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" id=\\\"menubtn\\\">\\n            <i class=\\\"material-icons\\\">account_circle</i>\\n        </button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item routerLink=\\\"/dashboard\\\">\\n                <mat-icon>dashboard</mat-icon>\\n                <span>Dashboard</span>\\n            </button>\\n            <button mat-menu-item>\\n                <mat-icon>lightbulb_outline</mat-icon>\\n                <span>Notifications</span>\\n            </button>\\n            <button mat-menu-item id=\\\"userprofilebtn\\\" (click)=\\\"setUserProfile()\\\">\\n                <mat-icon>person_outline</mat-icon>\\n                <span>Profile</span>\\n            </button>\\n            <button mat-menu-item>\\n                <mat-icon>settings</mat-icon>\\n                <span>Setting</span>\\n            </button>\\n            <button mat-menu-item routerLink=\\\"/\\\">\\n                <mat-icon>home</mat-icon>\\n                <span>Home</span>\\n            </button>\\n            <button mat-menu-item id=\\\"logout_header\\\" (click)=\\\"logoutUser()\\\">\\n                <mat-icon>power_settings_new</mat-icon>\\n                <span>Log Out</span>\\n            </button>\\n        </mat-menu>\\n    </mat-toolbar>\\n</header>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../service/user.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  setUserProfile() {\n    this.userService.getCurrentUser().subscribe(\n      res => {\n        // console.log(res)\n        if(res) {\n          this.router.navigate(['/profile']);\n        }\n      },\n      err => {\n        if(err instanceof HttpErrorResponse) {\n          if(err.status === 401) {\n            this.router.navigate([''])\n          }\n        }\n      }\n    )\n    \n  }\n\n  logoutUser() {\n    this.userService.logoutUser()\n  }\n}\n","module.exports = \":host {\\n    flex-grow: 1;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n.login-input-form {\\n    display:block;\\n    width: 100%;\\n}\\n.sign-in-button {\\n    display: inline-block; \\n    margin-top: 10px;\\n}\\n.sign-up-button {\\n    display: inline-block;\\n    padding-left: 10px;\\n    margin-top: 10px;\\n}\\n.button {\\n    width: 245px;\\n    margin-top: 100px;\\n}\\n\"","module.exports = \"<body>\\n    <div>\\n      <img width=\\\"500\\\" src=\\\"../assets/GatorBook.jpg\\\">\\n    </div>\\n    <div>\\n      <img width=\\\"500\\\" src=\\\"../assets/gator.png\\\">\\n    </div>\\n    <div class=\\\"sign-in-button\\\">\\n      <button class=\\\"button\\\" color=\\\"primary\\\" id=\\\"signinbtn\\\" routerLink=\\\"/signin\\\" mat-raised-button>Sign In</button>   \\n    </div>\\n    <div class=\\\"sign-up-button\\\">\\n      <button class=\\\"button\\\" color=\\\"warn\\\" id=\\\"signupbtn\\\" routerLink=\\\"/signup\\\" mat-raised-button>Sign Up</button>\\n    </div>\\n</body>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n}\n","export class User {\n    constructor(\n        public _id: String = '',\n        public username: string = '',\n        public password: string = '',\n        public email   : string = '',\n        public nickname: string = '',\n        public gender  : string = '',\n        public dob     : Date = new Date(),\n        public friend  : Array<string> = [],\n        public avatar: string = ''\n    ) {}\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private userService: UserService, private router: Router){ }\n\n  canActivate(): boolean {\n    if(this.userService.loggedIn()) {\n      return true\n    } else {\n      this.router.navigate([''])\n      return false\n    }\n  }\n    \n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from'@angular/common/http';\nimport { UserService } from'./user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector: Injector) { }\n  \n  intercept(req, next) {\n    //avoid cyclic dependency error, use injector\n    let userService = this.injector.get(UserService)\n    // console.log(userService.getToken())\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${userService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq)\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { Router } from'@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  loginUser(username: String, password: String) {\n    return this.http.post<any>('/users/login', { username: username, password: password })\n  }\n\n  create(user: User) {\n    return this.http.post<any>('/users/register', user)\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token')\n  }\n\n  getToken() {\n    return localStorage.getItem('token')\n  }\n\n  logoutUser() {\n    localStorage.removeItem('token')\n    this.router.navigate([''])\n  }\n\n  getCurrentUser() {\n    return this.http.get<User>('/users/getCurrentUser')\n  }\n\n  updateEmail(user: User) {\n    return this.http.put<User>('/users/update-email/' + user._id, user)\n  }\n\n  updatePassword(user: User) {\n    return this.http.put<User>('users/update-password/' + user._id, user)\n  }\n\n  updateAvatar(user: User, fd: FormData) {\n    return this.http.put<User>('users/update-avatar/' + user._id, fd)\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateLogin(user) {\n    if (user.username === undefined ||\n      user.username === '' ||\n      user.password === undefined ||\n      user.password === '') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateRegister(user) {\n    if (user.nickname === undefined ||\n      user.nickname === '' ||\n      user.email === undefined ||\n      user.email === '' ||\n      user.username === undefined ||\n      user.username === '' ||\n      user.password === undefined ||\n      user.password === '' ||\n      user.dob === undefined ||\n      user.dob === '') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","module.exports = \":host {\\n    flex-grow: 1;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n.login-input-form {\\n    display:block;\\n    width: 100%;\\n}\\n.sign-in-button {\\n    display: inline-block; \\n    margin-top: 10px;\\n}\\n.sign-up-button {\\n    display: inline-block;\\n    padding-left: 10px;\\n    margin-top: 10px;\\n}\"","module.exports = \"<body>\\n  <form (submit)=\\\"loginUser($event)\\\">\\n    <div>\\n      <img width=\\\"500\\\" src=\\\"../assets/GatorBook.jpg\\\">\\n    </div>\\n    <div>\\n      <img width=\\\"500\\\" src=\\\"../assets/gator.png\\\">\\n    </div>\\n    <mat-form-field class=\\\"login-input-form\\\">\\n      <input matInput placeholder=\\\"Enter your username\\\" name=\\\"username\\\" [(ngModel)]=\\\"signinUser.username\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"login-input-form\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Enter your password\\\" name=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"signinUser.password\\\">\\n      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n    </mat-form-field>\\n    <div class=\\\"sign-in-button\\\">\\n      <button color=\\\"primary\\\" id=\\\"signinbtn\\\" type=\\\"submit\\\" mat-raised-button>Sign In</button>   \\n    </div>\\n    <div class=\\\"sign-up-button\\\">\\n      <button color=\\\"primary\\\" id=\\\"backbtn\\\" routerLink=\\\"/\\\" mat-raised-button>Back</button>\\n    </div>\\n  </form>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\nimport { ValidateService } from '../service/validate.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-signinform',\n  templateUrl: './signinform.component.html',\n  styleUrls: ['./signinform.component.css']\n})\nexport class SigninformComponent implements OnInit {\n\n  hide = true;\n  signinUser = new User();\n  constructor(public snackBar: MatSnackBar, private router: Router, private userService: UserService, private validateService: ValidateService) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(e) {\n    e.preventDefault();\n    this.signinUser.username = e.target.elements[0].value;\n    this.signinUser.password = e.target.elements[1].value;\n\n    if (this.validateService.validateLogin(this.signinUser)) {\n      this.userService.loginUser(this.signinUser.username, this.signinUser.password)\n        .subscribe(\n          res => {\n            console.log(res)\n            if (res.success) {\n              this.snackBar.open('Login Success!', 'Close', {\n                duration: 2000,\n                panelClass:'green-snackbar'\n              });\n              localStorage.setItem('token', res.token);\n              this.router.navigate(['dashboard']);\n            } else if(res.message === 'Invalid password.'){\n              this.snackBar.open('Invalid Password!', 'Close', {\n                duration: 2000,\n                panelClass:'red-snackbar'\n              });\n            } else if(res.message === 'Username not found.') {\n              this.snackBar.open('No such user, please sign up!', 'Close', {\n                duration: 2000,\n                panelClass:'red-snackbar'\n              });\n            }\n          },\n          err => console.log(err)\n        )\n    } else if(this.signinUser.username === '' || this.signinUser.username === undefined) {\n      this.snackBar.open('Please fill in the user name!', 'Close', {\n        duration: 2000,\n        panelClass:'red-snackbar'\n      });\n    } else if(this.signinUser.password === '' || this.signinUser.password === undefined) {\n      this.snackBar.open('Please fill in the user password!', 'Close', {\n        duration: 2000,\n        panelClass:'red-snackbar'\n      });\n    } \n  }\n\n}\n","module.exports = \":host {\\n    flex-grow: 1;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n  \\n.example-full-width {\\n    width: 100%;\\n}\\n  \\n.regis-title {\\n    font-weight:bold;\\n    font-size: 40px;\\n    margin:1.5em 0;\\n    display:block;\\n}\\n  \\n.button-style {\\n    margin:2.5em 0;\\n}\\n  \\n.gender-style {\\n    margin:1.5em 0;\\n}\\n  \\n.left-gender {\\n    display: inline-block; \\n}\\n  \\n.right-gender {\\n    display: inline-block;\\n    padding-left: 30px;\\n}\\n  \\n.left-component {\\n    display: inline-block; \\n    margin-top: 15px;\\n}\\n  \\n.right-component {\\n    display: inline-block;\\n    padding-left: 10px;\\n    margin-top: 15px;\\n}\"","module.exports = \"<form (submit)=\\\"signupUser()\\\">\\n    <div>\\n      <label class=\\\"regis-title\\\">Sign Up</label>\\n    </div>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Username\\\" name=\\\"signupusername\\\" [(ngModel)]=\\\"newUser.username\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Nickname\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"newUser.nickname\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type =\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"signuppassword\\\" [(ngModel)]=\\\"newUser.password\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type =\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" name=\\\"confirmedpassword\\\" [(ngModel)]=\\\"confirmedpassword\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type =\\\"text\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"newUser.email\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Birthdate\\\" name=\\\"dob\\\" [(ngModel)]=\\\"newUser.dob\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\n    </mat-form-field>\\n    <div class=\\\"gender-style\\\">\\n      <mat-radio-group name=\\\"gender\\\" [(ngModel)]=\\\"newUser.gender\\\">\\n      <mat-radio-button class=\\\"left-gender\\\" value=\\\"Male\\\">Male</mat-radio-button>\\n      <mat-radio-button class=\\\"right-gender\\\" value=\\\"Female\\\">Female</mat-radio-button>\\n    </mat-radio-group>\\n    </div>\\n    <div class=\\\"left-component\\\">    \\n      <button color =\\\"primary\\\" id=signupsubmitbtn type =\\\"submit\\\" mat-raised-button>Submit</button>\\n    </div>\\n    <div class=\\\"right-component\\\">\\n        <button color =\\\"primary\\\" id=signupcancelbtn routerLink=\\\"/\\\" mat-raised-button>Cancel</button>\\n    </div>\\n  </form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/user';\nimport { UserService } from '../service/user.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-signupform',\n  templateUrl: './signupform.component.html',\n  styleUrls: ['./signupform.component.css']\n})\nexport class SignupformComponent implements OnInit {\n\n  newUser = new User();\n\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  signupUser() {\n    console.log(this.newUser);\n    this.userService.create(this.newUser)  \n    .subscribe(\n      res => {\n        console.log(res);\n        if(res.success) {\n          // localStorage.setItem('token', res.token);\n          this.router.navigate(['signin'])\n        } else {\n          // TO_DO\n        }\n      },\n      err => console.log(err)\n    )      \n  }\n\n}\n","module.exports = \"<div>\\n    <div>\\n        <h1 class=\\\"avatar-header\\\">Change your Avatar</h1>\\n    </div>\\n    <div>\\n        <img class=\\\"uploadImg\\\" src=\\\"{{ avatar || 'https://www.ischool.berkeley.edu/sites/default/files/default_images/avatar.jpeg' }}\\\">\\n    </div>\\n\\n    <div class=\\\"input\\\">\\n        <input class=\\\"ng-hide\\\" id=\\\"input-file-id\\\" (change)=\\\"fileChangeEvent($event)\\\" type=\\\"file\\\" #inputFile hidden/>\\n        <button color=\\\"primary\\\" id=\\\"selectFile\\\" mat-raised-button>\\n            <Label for=\\\"input-file-id\\\">\\n                <i class=\\\"material-icons mat-18 icon-align\\\">insert_photo</i>\\n                Photo\\n            </Label>\\n        </button>\\n        <button class=\\\"button-spacer\\\" color=\\\"warn\\\" id=\\\"sendpost\\\" (click)=\\\"updateAvatar()\\\" mat-raised-button>Confirm</button>\\n    </div>\\n</div>\"","module.exports = \":host {\\n    flex-grow: 1;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    /* background-color:#EEEEEE; */\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\\n  \\n  .example-button-color {\\n      color: #80CBC4\\n  }\\n  \\n  .example-form {\\n    min-width: 150px;\\n    max-width: 600px;\\n    width: 100%;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n  .post-image {\\n    background-size: cover;\\n    width: 150px;\\n    height: 150px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    margin-top: 80px;\\n    margin-bottom: 100px;\\n  }\\n  \\n  .example-card {\\n    width: 800px;\\n    padding:0 0 50px 0;\\n    margin-bottom: 50px;\\n  }\\n  \\n  .card-header {\\n    background-size: cover;\\n    background-image: url('afternoon.jpg');\\n    margin-bottom: 50px;\\n  }\\n  \\n  .back-button {\\n    margin-left: 100px;\\n  }\\n  \\n  .uploadImg{\\n    width: 100%;\\n    height: 100%;\\n    max-width: 300px;\\n    padding:0 0 20px 0;\\n  }\\n  \\n  .icon-align{\\n    display: inline-flex;\\n    vertical-align: middle;\\n  }\\n  \\n  .input{\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n  \\n  .button-spacer{\\n    margin-left: 10px;\\n  }\\n  \\n  .avatar-header{\\n    align-items: center;\\n    justify-content: center;\\n    font: bold;\\n  }\"","module.exports = \"<mat-card class=\\\"example-card mat-elevation-z8\\\">\\n  <mat-card-header class=\\\"card-header\\\">\\n    <img mat-card-avatar class=\\\"post-image\\\" src=\\\"{{ currentUser.avatar || 'https://www.ischool.berkeley.edu/sites/default/files/default_images/avatar.jpeg'}}\\\"\\n      (click)=\\\"openDialog()\\\">\\n  </mat-card-header>\\n\\n  <form class=\\\"example-form\\\">\\n    <!-- User name -->\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput id=\\\"prfusername\\\" placeholder=\\\"Username\\\" disabled value={{currentUser.username}}>\\n    </mat-form-field>\\n    <!-- Nick name -->\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput id=\\\"prfnickname\\\" placeholder=\\\"Nickname\\\" disabled value={{currentUser.nickname}}>\\n    </mat-form-field>\\n    <!-- Birthday -->\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput id=\\\"prfbirthday\\\" placeholder=\\\"Birthday\\\" disabled value={{currentUser.dob.toString().substring(0,10)}}>\\n    </mat-form-field>\\n    <!-- Email -->\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n      <tr>\\n        <td>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput id=\\\"prfemail\\\" placeholder=\\\"Email\\\" disabled value={{currentUser.email}}>\\n          </mat-form-field>\\n        </td>\\n        <td>\\n          <button color=\\\"primary\\\" id=\\\"editemailbtn\\\" (click)=\\\"emaileditable=!emaileditable\\\" mat-raised-button>Edit</button>\\n        </td>\\n      </tr>\\n    </table>\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\" *ngIf=\\\"emaileditable\\\">\\n      <tr>\\n        <td>\\n          <form class=\\\"example-form\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input type=\\\"text\\\" matInput placeholder=\\\"New Email Address\\\" name=\\\"email\\\" [(ngModel)]=\\\"currentUser.email\\\">\\n            </mat-form-field>\\n          </form>\\n        </td>\\n        <td>\\n          <button color=\\\"primary\\\" id=\\\"confirmemailbtn\\\" (click)=\\\"update_email(); emaileditable=!emaileditable;\\\" mat-raised-button>Confirm</button>\\n        </td>\\n      </tr>\\n    </table>\\n    <!-- Password -->\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n      <tr>\\n        <td>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Password\\\" disabled value=....................>\\n          </mat-form-field>\\n        </td>\\n        <td>\\n          <button color=\\\"primary\\\" id=\\\"editpasswordbtn\\\" (click)=\\\"passwordeditable=!passwordeditable\\\" mat-raised-button>Edit</button> \\n        </td>\\n      </tr>\\n    </table>\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\" *ngIf=\\\"passwordeditable\\\">\\n      <tr>\\n        <td>\\n          <form class=\\\"example-form\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"New Password\\\" name=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"currentUser.password\\\">\\n              <!-- <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon> -->\\n            </mat-form-field>\\n          </form>\\n        </td>\\n        <td>\\n          <button color=\\\"primary\\\" id=\\\"confirmpasswordbtn\\\" (click)=\\\"update_password(); passwordeditable=!passwordeditable;\\\" mat-raised-button>Confirm</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n  </form>\\n\\n  <button color=\\\"primary\\\" class=\\\"back-button\\\" routerLink=\\\"/dashboard\\\" mat-raised-button>Back to Homepage</button>\\n\\n\\n</mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from '../service/user.service';\nimport { User } from '../model/user';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  currentUser = new User();\n  hide = true;\n\n  constructor(private userService: UserService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      res => {\n        if(res) {\n          console.log(res)\n          this.currentUser = res\n        } else {\n          console.log('Get current user error!')\n        }\n      },\n      err => console.log(err)\n    )\n  }\n\n  update_email() {\n    this.userService.updateEmail(this.currentUser).subscribe(\n      res => {\n        if (res) {\n          console.log('Email modify success!')\n          this.ngOnInit()\n        } else {\n          console.log('Update email error!')\n        }\n      },\n      err => console.log(err)\n    )\n  }\n\n  update_password() {\n    this.userService.updatePassword(this.currentUser).subscribe(\n      res => {\n        if(res) {\n          console.log('Password modify success!')\n          this.ngOnInit()\n        } else {\n          console.log('Update password error!')\n        }\n      },\n      err => console.log(err)\n    )\n  }\n\n   openDialog(): void {\n    let dialogRef = this.dialog.open(AvatarPreviewComponent, {\n      width: '450px',\n      data: {  currentUser: this.currentUser }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n}\n@Component({\n  selector: 'app-avatarpreview',\n  templateUrl: './avatarPreview.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class AvatarPreviewComponent implements OnInit {\n  \n  currentUser: User = new User();\n  selectedFile: File = null;\n  avatar = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<AvatarPreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, private userService: UserService) { }\n\n  ngOnInit() { \n    this.currentUser = this.data.currentUser\n    this.avatar = this.data.currentUser.avatar\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  fileChangeEvent(event) {\n    this.selectedFile = event.target.files[0];\n    if(this.selectedFile) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (x: any) => {\n        this.avatar = x.target.result;\n      }\n    }\n  }\n  updateAvatar() {\n    const fd = new FormData();\n    fd.append('avatar', this.selectedFile, this.selectedFile.name);\n    this.userService.updateAvatar(this.currentUser, fd).subscribe(\n      res => {\n        if(res) {\n          console.log('Avatar modify success!')\n        } else {\n          console.log('Update avatar error!')\n        }\n      },\n      err => console.log(err)\n    );\n    this.dialogRef.close();\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}